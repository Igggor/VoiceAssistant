import random
import pyttsx3, os, time, datetime, requests
import speech_recognition
from fuzzywuzzy import fuzz


sr = speech_recognition.Recognizer()
sr.pause_threshold = 0.5
speaker = pyttsx3.init()
r = speech_recognition.Recognizer()
m = speech_recognition.Microphone(device_index=1)

#–°–ª—É—à–∞–µ–º, —á—Ç–æ —Å–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def listen_command():
    try:
        with speech_recognition.Microphone() as mic:
            sr.adjust_for_ambient_noise(source=mic, duration=0.5)
            audio = sr.listen(source=mic)
            query = sr.recognize_google(audio_data=audio, language='ru-RU').lower()

        return query
    except speech_recognition.UnknownValueError:
        return 'Damn... –ù–µ –ø–æ–Ω—è–ª —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª :/'

def play_music():# –ü—Ä–æ–∏–≥—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–æ –µ—â–µ –Ω–∞–¥–æ –¥–æ–ø–∏—Å–∞—Ç—å
    #os.system('cd H:\–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\Python files\VoiceAssestant')
    return "–ù–µ —Ç–∞–Ω—Ü—É–µ–º, —è –µ—â–µ –Ω–µ —É–º–µ—é –≤–∫–ª—é—á–∞—Ç—å –º—É–∑—ã–∫—É, –∏–∑–≤–∏–Ω–∏, –Ω–æ —è –∞–∫—Ç–∏–≤–Ω–æ —É—á—É—Å—å" #f'–¢–∞–Ω—Ü—É–µ–º –ø–æ–¥ {random_file.split("/")[-1]} üîäüîäüîä'

def create_task():#–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –≤ todo –ª–∏—Å—Ç–µ
    speak('–ß—Ç–æ –¥–æ–±–∞–≤–∏–º –≤ —Å–ø–∏—Å–æ–∫ –¥–µ–ª?')
    query = listen_command()
    with open('todo-list.txt', 'a') as file:
        file.write(f'{query}\n')
    return f'–ó–∞–¥–∞—á–∞ {query} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ todo-list!'


#–§—É–Ω–∫—Ü–∏—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ (—Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å API –Ω–æ –º–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –∞–Ω–µ–∫–¥–æ—Ç—ã –Ω–∞ —Ç–æ–º —Å–∞–π—Ç–µ, –ø–æ—ç—Ç–æ–º—É –ø–æ–∫–∞ —á—Ç–æ –º–∞—Å—Å–∏–≤)
anekdots = ["–ê –≤–æ—Ç –∫ –Ω–∞–º –≤ —Å—Ç—É–¥–∏—é –ø—Ä–∏—à–ª–æ –ø–∏—Å—å–º–æ –æ—Ç –®–∞–º–∏–ª—è –ü—Ä–æ—Ö–æ—Ä–æ–≤–∏—á–∞ –ö–∞—Ü–Ω–µ–ª—å—Å–æ–Ω–∞ –∏–∑ –ù–∏–≥–µ—Ä–∏–∏...–î–∞ —É–∂, –∫–∞–∫ –∂–µ —Å—É–¥—å–±–∞ —Ä–∞—Å–ø–æ—Ä—è–¥–∏–ª–∞—Å—å —á–µ–ª–æ–≤–µ–∫–æ–º!",
            "–° –≥–æ–¥–∞–º–∏ —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –≤—Å—ë –±–æ–ª–µ–µ –º—É–¥—Ä—ã–º, –∏ –º—É–¥—Ä–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –º—É–¥—Ä–æ—Å—Ç—å –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç.",
            "–°—Ç–∞—Ä—ã–π –µ–≤—Ä–µ–π –≥–æ–≤–æ—Ä–∏—Ç –∂–µ–Ω–µ:- –°–∞—Ä–∞, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∫—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ –Ω–∞—Å —É–º—Ä–µ—Ç, —è —É–µ–∑–∂–∞—é –≤ –ò–∑—Ä–∞–∏–ª—å",
            "¬´–í –ü—Ä–∏–∫–∞–º—å–µ –æ—Ç–º–µ—Ç—è—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫ –≥—É—Å—è. –ì–æ—Å—Ç–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ —Å–º–æ–≥—É—Ç –∫—É–ø–∏—Ç—å –≥—É—Å–∏–Ω—ã–µ —Ç—É—à–∫–∏, –æ–¥–µ—è–ª–∞, –ø–µ—Ä–∏–Ω—ã –∏ –ø–æ–¥—É—à–∫–∏¬ª. –¢–∞–∫ —Å–µ–±–µ —É –≥—É—Å—è –ø—Ä–∞–∑–¥–Ω–∏–∫.",
            "–°–µ–≥–æ–¥–Ω—è –•—ç–ª–ª–æ—É–∏–Ω. –ü—Ä–∏–¥—É –Ω–µ–Ω–∞–∫—Ä–∞—à–µ–Ω–Ω–∞—è",
            "–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ–≥—Ä–∞–Ω–∏—á–Ω–æ–º —Å—Ç–æ–ª–±–µ: –¢–æ–≤–∞—Ä–∏—â–∏ –ù–∞—Ä—É—à–∏—Ç–µ–ª–∏! –í —Å–≤—è–∑–∏ —Å –Ω–µ—Ö–≤–∞—Ç–∫–æ–π –ø–∞—Ç—Ä–æ–Ω–æ–≤ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ–≤—ã—Å—Ç—Ä–µ–ª—ã –≤ –≤–æ–∑–¥—É—Ö –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º!"
            ]
def get_anek():
    return anekdots[random.randint(0, len(anekdots)-1)]

def date_now():
    now = datetime.datetime.now()
    return ("–°–µ–π—á–∞—Å " + str(now.hour) + ":" + str(now.minute))

#–§—É–Ω–∫—Ü–∏—è tts
def speak(sth):
    print(f"[log] said: {sth}")
    speaker.say(sth)
    speaker.runAndWait()
    speaker.stop()



def thanks():
    return "–ë—ã–ª —Ä–∞–¥ –ø–æ–º–æ—á—å."


def curs():
    return None


def greeting():
    return '–ü—Ä–∏–≤–µ—Çc—Ç–≤—É—é —Ç–µ–±—è!'





def weather():
    speak("–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É?")
    city = listen_command()
    print(f"[Log] —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –≥–æ—Ä–æ–¥ {city}")
    return get_weather(city)


#open_weather_token = "e37d54207830a94eee9d3babc8b0d27f"

def get_weather(city, open_weather_token = "e37d54207830a94eee9d3babc8b0d27f"):

    code_to_smile = {
        "Clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U00002614",
        "Drizzle": "–î–æ–∂–¥—å \U00002614",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
        "Mist": "–¢—É–º–∞–Ω \U0001F32B"
    }

    try:
        r = requests.get(
            f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={open_weather_token}&units=metric"
        )
        data = r.json()
        #pprint(data)

        city = data["name"]
        cur_weather = data["main"]["temp"]

        weather_description = data["weather"][0]["main"]
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞!"

        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(
            data["sys"]["sunrise"])
        feel = data['main']['feels_like']

        return (f"{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}\n"
              f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}¬∞ \n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feel}¬∞\n"
              f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}% {wd}\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–∏–ª–∏–º–µ—Ç—Ä–æ–≤ —Ä—Ç—É—Ç–Ω–æ–≥–æ —Å—Ç–æ–ª–±–∞\n–í–µ—Ç–µ—Ä: {wind} –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É\n"
              )

    except Exception as ex:
        print(ex)
        return("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
